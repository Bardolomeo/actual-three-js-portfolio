/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Graham Rust (https://sketchfab.com/GRXR.ca)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/ikea-lamp-4f30f422f4c24e6ca50301e7ff4fbff5
Title: Ikea Lamp
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { editable as e } from '@theatre/r3f'
import { lamp } from '@/constants'
import gsap from 'gsap'

type GLTFResult = GLTF & {
  nodes: {
    defaultMaterial: THREE.Mesh
  }
  materials: {
    IkeaLamp: THREE.MeshStandardMaterial
  }
}


export function Lamp(props: JSX.IntrinsicElements['group']) {
  const lampLightRef = useRef(null!);
  
  useEffect(() =>  {gsap.timeline({repeat: Infinity}).
    to(lampLightRef.current, {intensity: 0}).
    to(lampLightRef.current, {intensity: lamp.intensity})}, [])


  const { nodes, materials } = useGLTF('/Lamp/scene.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <pointLight 
            position={lamp.lightPosition}
            intensity={lamp.intensity}
            decay={lamp.decay}
            color={lamp.color}
            distance={lamp.distance}
            ref={lampLightRef}/>
          <e.mesh
		  	    theatreKey='lamp'
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial.geometry}
            material={materials.IkeaLamp}
            position={lamp.position}
            rotation={lamp.rotation}
            scale={lamp.scale}>
          </e.mesh>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/Lamp/scene.gltf')
