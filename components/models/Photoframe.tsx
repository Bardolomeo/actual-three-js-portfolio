/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Twpic (https://sketchfab.com/TWPIC)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/photoframe-ae37b35ea4c7406885acea192024fd44
Title: PhotoFrame
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { Image, useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { editable as e } from '@theatre/r3f'

type GLTFResult = GLTF & {
  nodes: {
    fancy_picture_frame_02_fancy_picture_frame_02_0: THREE.Mesh
    fancy_picture_frame_02_canvas_fancy_picture_frame_02_canvas_0: THREE.Mesh
  }
  materials: {
    fancy_picture_frame_02: THREE.MeshStandardMaterial
    fancy_picture_frame_02_canvas: THREE.MeshStandardMaterial
  }
}

export function Photoframe(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/photoframe/scene.gltf') as GLTFResult

  return (
    <group {...props} dispose={null}>
      <group 
	  scale={0.15}
	  position={[19.316968205800194, 2.7, 3.25]}
	  rotation={[-1.678, -1.314, -1.6]}
	  >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.fancy_picture_frame_02_fancy_picture_frame_02_0.geometry}
          material={materials.fancy_picture_frame_02}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        >
			{/* <Image
				url='blurredme.png' 
				geometry={new THREE.PlaneGeometry()}
				position={[-0,-0.0188,0]}
				rotation={[1.575, 0 ,0.01]}
				opacity={0.75}
				scale={[0.5, 0.6]}
				transparent={true}
				color={new THREE.Color('#ffffff')}
			>
			</Image> */}
			<mesh 
				position={[-0,-0.018,-0.025]}
				rotation={[1.57, 0.001 ,0]}
				scale={[.5,.6,.5]}>
					<planeGeometry/>
					<meshPhysicalMaterial 
						transparent={true}
						opacity={1}
						map={new THREE.TextureLoader().load('/blurredme.png')}
						color={new THREE.Color('#DDDDDD')}
						/>
			</mesh>
		</mesh>
      </group>
    </group>
  )
}

useGLTF.preload('/photoframe/scene.gltf')
